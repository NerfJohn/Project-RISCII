# Parse Table Script Ruleset
# ==========================
# 1) Format: <cur_state>::<token>::<new_states>
# 2) Sub states use lower_snake_case, tokens use UPPER_SNAKE_CASE
# 3) New states specified via CSV format (in order of expansion)
# 4) Prefix '#' to indicate actions, use UPPER_SNAKE_CASE
# 5) "prgm" state and "EOF" token are built-in
# ==========================
# Note: Tokens based off enum created in ScanTable.h
# Note: Leave new states blank to indicate an epsilon

# Handle starting breakdown of program into declarations/definitions.
prgm::SCAN_UNSIGNED::type,SCAN_ID,decl,decl_list,#PARSE_PRGM_NODE
prgm::SCAN_INT::SCAN_ID,decl,decl_list,#PARSE_PRGM_NODE
prgm::SCAN_CHAR::SCAN_ID,decl,decl_list,#PARSE_PRGM_NODE

decl_list::SCAN_UNSIGNED::type,SCAN_ID,decl,decl_list
decl_list::SCAN_INT::SCAN_ID,decl,decl_list
decl_list::SCAN_CHAR::SCAN_ID,decl,decl_list
decl_list::EOF::

# Address different types that can be unsigned.
type::SCAN_INT::
type::SCAN_CHAR::

# Breakdown declarations/definitions into their parts.
decl::SCAN_SEMICOLON::#PARSE_VDECL_NODE
decl::SCAN_LPAREN::param_list,SCAN_RPAREN,SCAN_LCURLY,stmt_list,SCAN_RCURLY,#PARSE_FDEF_NODE

# Define parameter list as zero to many variable declarations.
param_list::SCAN_UNSIGNED::type,SCAN_ID,#PARSE_VDECL_NODE,next_param
param_list::SCAN_INT::SCAN_ID,#PARSE_VDECL_NODE,next_param
param_list::SCAN_CHAR::SCAN_ID,#PARSE_VDECL_NODE,next_param
param_list::SCAN_RPAREN::--

param_force::SCAN_UNSIGNED::type,SCAN_ID,#PARSE_VDECL_NODE,next_param
param_force::SCAN_INT::SCAN_ID,#PARSE_VDECL_NODE,next_param
param_force::SCAN_CHAR::SCAN_ID,#PARSE_VDECL_NODE,next_param

next_param::SCAN_COMMA::param_force
next_param::SCAN_RPAREN::--

# Breakdown list of statements into separate statement types with recursion.
stmt_list::SCAN_UNSIGNED::type,SCAN_ID,SCAN_SEMICOLON,#PARSE_VDECL_NODE,stmt_list
stmt_list::SCAN_INT::SCAN_ID,SCAN_SEMICOLON,#PARSE_VDECL_NODE,stmt_list
stmt_list::SCAN_CHAR::SCAN_ID,SCAN_SEMICOLON,#PARSE_VDECL_NODE,stmt_list
stmt_list::SCAN_ID::#PARSE_ID_NODE,id_stmt,stmt_list
stmt_list::SCAN_IF::SCAN_LPAREN,exp,SCAN_RPAREN,SCAN_LCURLY,stmt_list,SCAN_RCURLY,#PARSE_IF_NODE,stmt_list
stmt_list::SCAN_WHILE::SCAN_LPAREN,exp,SCAN_RPAREN,SCAN_LCURLY,stmt_list,SCAN_RCURLY,#PARSE_WHILE_NODE,stmt_list
stmt_list::SCAN_RETURN::exp,SCAN_SEMICOLON,#PARSE_RETURN_NODE,stmt_list
stmt_list::SCAN_RCURLY::--

# Breakdown difference between assign statement and function call statement.
id_stmt::SCAN_ASSIGN::exp,SCAN_SEMICOLON,#PARSE_ASSIGN_NODE
id_stmt::SCAN_LPAREN::exp_list,SCAN_RPAREN,SCAN_SEMICOLON,#PARSE_CALL_NODE

# Define expression list as zero to many expressions.
exp_list::SCAN_LPAREN::exp,SCAN_RPAREN,op_one,next_exp
exp_list::SCAN_ID::#PARSE_ID_NODE,call_extra,op_one,next_exp
exp_list::SCAN_LNOT::operand,#PARSE_LNOT_NODE,op_one,next_exp
exp_list::SCAN_BNOT::operand,#PARSE_BNOT_NODE,op_one,next_exp
exp_list::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_one,next_exp
exp_list::SCAN_ILITERAL::#PARSE_LIT_NODE,op_one,next_exp
exp_list::SCAN_HLITERAL::#PARSE_LIT_NODE,op_one,next_exp
exp_list::SCAN_CLITERAL::#PARSE_LIT_NODE,op_one,next_exp
exp_list::SCAN_RPAREN::--

exp_force::SCAN_LPAREN::exp,SCAN_RPAREN,op_one,next_exp
exp_force::SCAN_ID::#PARSE_ID_NODE,call_extra,op_one,next_exp
exp_force::SCAN_LNOT::operand,#PARSE_LNOT_NODE,op_one,next_exp
exp_force::SCAN_BNOT::operand,#PARSE_BNOT_NODE,op_one,next_exp
exp_force::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_one,next_exp
exp_force::SCAN_ILITERAL::#PARSE_LIT_NODE,op_one,next_exp
exp_force::SCAN_HLITERAL::#PARSE_LIT_NODE,op_one,next_exp
exp_force::SCAN_CLITERAL::#PARSE_LIT_NODE,op_one,next_exp

next_exp::SCAN_COMMA::exp_force
next_exp::SCAN_RPAREN::--

# Define expressions first by their "operands".
exp::SCAN_LPAREN::exp,SCAN_RPAREN,op_one
exp::SCAN_ID::#PARSE_ID_NODE,call_extra,op_one
exp::SCAN_LNOT::operand,#PARSE_LNOT_NODE,op_one
exp::SCAN_BNOT::operand,#PARSE_BNOT_NODE,op_one
exp::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_one
exp::SCAN_ILITERAL::#PARSE_LIT_NODE,op_one
exp::SCAN_HLITERAL::#PARSE_LIT_NODE,op_one
exp::SCAN_CLITERAL::#PARSE_LIT_NODE,op_one

operand::SCAN_LPAREN::exp,SCAN_RPAREN
operand::SCAN_ID::#PARSE_ID_NODE,call_extra
operand::SCAN_LNOT::operand,#PARSE_LNOT_NODE
operand::SCAN_BNOT::operand,#PARSE_BNOT_NODE
operand::SCAN_MINUS::operand,#PARSE_MINUS_NODE
operand::SCAN_ILITERAL::#PARSE_LIT_NODE
operand::SCAN_HLITERAL::#PARSE_LIT_NODE
operand::SCAN_CLITERAL::#PARSE_LIT_NODE

call_extra::SCAN_LPAREN::exp_list,SCAN_RPAREN,#PARSE_CALL_NODE
call_extra::SCAN_PLUS::--
call_extra::SCAN_MINUS::--
call_extra::SCAN_LSHIFT::--
call_extra::SCAN_RSHIFT::--
call_extra::SCAN_GRT::--
call_extra::SCAN_LT::--
call_extra::SCAN_GEQ::--
call_extra::SCAN_LEQ::--
call_extra::SCAN_EQ::--
call_extra::SCAN_NEQ::--
call_extra::SCAN_AND::--
call_extra::SCAN_XOR::--
call_extra::SCAN_OR::--
call_extra::SCAN_RPAREN::--
call_extra::SCAN_SEMICOLON::--
call_extra::SCAN_COMMA::--

# Define operators and precedence through levelled rules.
op_one::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_one
op_one::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_one
op_one::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_one
op_one::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_one
op_one::SCAN_GRT::operand,op_three,#PARSE_GRT_NODE,op_one
op_one::SCAN_LT::operand,op_three,#PARSE_LT_NODE,op_one
op_one::SCAN_GEQ::operand,op_three,#PARSE_GEQ_NODE,op_one
op_one::SCAN_LEQ::operand,op_three,#PARSE_LEQ_NODE,op_one
op_one::SCAN_EQ::operand,op_four,#PARSE_EQ_NODE,op_one
op_one::SCAN_NEQ::operand,op_four,#PARSE_NEQ_NODE,op_one
op_one::SCAN_AND::operand,op_five,#PARSE_AND_NODE,op_one
op_one::SCAN_XOR::operand,op_six,#PARSE_XOR_NODE,op_one
op_one::SCAN_OR::operand,op_seven,#PARSE_OR_NODE,op_one
op_one::SCAN_RPAREN::--
op_one::SCAN_SEMICOLON::--
op_one::SCAN_COMMA::--

op_two::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_two
op_two::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_two
op_two::SCAN_LSHIFT::--
op_two::SCAN_RSHIFT::--
op_two::SCAN_GRT::--
op_two::SCAN_LT::--
op_two::SCAN_GEQ::--
op_two::SCAN_LEQ::--
op_two::SCAN_EQ::--
op_two::SCAN_NEQ::--
op_two::SCAN_AND::--
op_two::SCAN_XOR::--
op_two::SCAN_OR::--
op_two::SCAN_RPAREN::--
op_two::SCAN_SEMICOLON::--
op_two::SCAN_COMMA::--

op_three::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_three
op_three::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_three
op_three::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_three
op_three::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_three
op_three::SCAN_GRT::--
op_three::SCAN_LT::--
op_three::SCAN_GEQ::--
op_three::SCAN_LEQ::--
op_three::SCAN_EQ::--
op_three::SCAN_NEQ::--
op_three::SCAN_AND::--
op_three::SCAN_XOR::--
op_three::SCAN_OR::--
op_three::SCAN_RPAREN::--
op_three::SCAN_SEMICOLON::--
op_three::SCAN_COMMA::--

op_four::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_four
op_four::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_four
op_four::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_four
op_four::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_four
op_four::SCAN_GRT::operand,op_three,#PARSE_GRT_NODE,op_four
op_four::SCAN_LT::operand,op_three,#PARSE_LT_NODE,op_four
op_four::SCAN_GEQ::operand,op_three,#PARSE_GEQ_NODE,op_four
op_four::SCAN_LEQ::operand,op_three,#PARSE_LEQ_NODE,op_four
op_four::SCAN_EQ::--
op_four::SCAN_NEQ::--
op_four::SCAN_AND::--
op_four::SCAN_XOR::--
op_four::SCAN_OR::--
op_four::SCAN_RPAREN::--
op_four::SCAN_SEMICOLON::--
op_four::SCAN_COMMA::--

op_five::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_five
op_five::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_five
op_five::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_five
op_five::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_five
op_five::SCAN_GRT::operand,op_three,#PARSE_GRT_NODE,op_five
op_five::SCAN_LT::operand,op_three,#PARSE_LT_NODE,op_five
op_five::SCAN_GEQ::operand,op_three,#PARSE_GEQ_NODE,op_five
op_five::SCAN_LEQ::operand,op_three,#PARSE_LEQ_NODE,op_five
op_five::SCAN_EQ::operand,op_four,#PARSE_EQ_NODE,op_five
op_five::SCAN_NEQ::operand,op_four,#PARSE_NEQ_NODE,op_five
op_five::SCAN_AND::--
op_five::SCAN_XOR::--
op_five::SCAN_OR::--
op_five::SCAN_RPAREN::--
op_five::SCAN_SEMICOLON::--
op_five::SCAN_COMMA::--

op_six::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_six
op_six::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_six
op_six::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_six
op_six::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_six
op_six::SCAN_GRT::operand,op_three,#PARSE_GRT_NODE,op_six
op_six::SCAN_LT::operand,op_three,#PARSE_LT_NODE,op_six
op_six::SCAN_GEQ::operand,op_three,#PARSE_GEQ_NODE,op_six
op_six::SCAN_LEQ::operand,op_three,#PARSE_LEQ_NODE,op_six
op_six::SCAN_EQ::operand,op_four,#PARSE_EQ_NODE,op_six
op_six::SCAN_NEQ::operand,op_four,#PARSE_NEQ_NODE,op_six
op_six::SCAN_AND::operand,op_five,#PARSE_AND_NODE,op_six
op_six::SCAN_XOR::--
op_six::SCAN_OR::--
op_six::SCAN_RPAREN::--
op_six::SCAN_SEMICOLON::--
op_six::SCAN_COMMA::--

op_seven::SCAN_PLUS::operand,#PARSE_PLUS_NODE,op_seven
op_seven::SCAN_MINUS::operand,#PARSE_MINUS_NODE,op_seven
op_seven::SCAN_LSHIFT::operand,op_two,#PARSE_LSHIFT_NODE,op_seven
op_seven::SCAN_RSHIFT::operand,op_two,#PARSE_RSHIFT_NODE,op_seven
op_seven::SCAN_GRT::operand,op_three,#PARSE_GRT_NODE,op_seven
op_seven::SCAN_LT::operand,op_three,#PARSE_LT_NODE,op_seven
op_seven::SCAN_GEQ::operand,op_three,#PARSE_GEQ_NODE,op_seven
op_seven::SCAN_LEQ::operand,op_three,#PARSE_LEQ_NODE,op_seven
op_seven::SCAN_EQ::operand,op_four,#PARSE_EQ_NODE,op_seven
op_seven::SCAN_NEQ::operand,op_four,#PARSE_NEQ_NODE,op_seven
op_seven::SCAN_AND::operand,op_five,#PARSE_AND_NODE,op_seven
op_seven::SCAN_XOR::operand,op_six,#PARSE_XOR_NODE,op_seven
op_seven::SCAN_OR::--
op_seven::SCAN_RPAREN::--
op_seven::SCAN_SEMICOLON::--
op_seven::SCAN_COMMA::--