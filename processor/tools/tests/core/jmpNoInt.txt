; Tests for JLR and JPR (w/o interrupts, though checksRT w/o int does nothing).

__START:
_la $0 jlr0        ; R7 == jlr0 Address (0x18)
JLR $7 $0 0        ; Go to jlr0 + 0, $7 now 0x6
STR $0 $1 0        ; Copy $0 to 0x8000
HLT ;              ; Addr 0x8 -> 0xA ($7 should be 0x6, 0x8000 should be 0x18)


JLR $7 $0 2        ; Go to jlr0 + 2, $7 now 0xC
HLT                ; Addr 0xC -> 0xE
HLT                ; Addr 0xE -> 0x10 (Should be hit instead of 0xC)
_la $4 jprFin      ; Prep jprFin address in $4
JLR $7 $0 -1       ; Go to jlr0 - 1, $7 now 0x12


JPR $4 -1          ; Go to jprFin - 1
jlr0:
HLT                ; Addr 0x18 -> 0x1A ($7 should be 0x6)
JPR $7 0           ; Go to linked caller + 0 (ie 0x6)
HLT                ; Addr 0x1C -> 0x1E ($7 should be 0xC)
JPR $7 1           ; Go to caller + 1 (ie 0xE)


HLT                ; Addr 0x20 -> 0x22 (Never hit)
LBI $7 5           ; Set $7 to 5 (must be found w/ negative jump)
jprFin:
NOP
JPR %r             ; Not in interrupt, should de nothing
HLT                ; Addr 0x28 -> 0x2A