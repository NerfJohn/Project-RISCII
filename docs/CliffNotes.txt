================================================================================
Project RISCII: Cliff Notes

"General project notes- slated for formal documenting or temporary"
================================================================================
Project (RISCII) Overview:

Priorities of "Home Brewed" Dev Kit
	1) Fun        - it's a personal project, not a job/"MS started in a garage"
	2) Capability - simplicity is preferred, but quality goes a long way
	3) Learning   - good opportunity to learn (at least vaguely) tools/systems

Levels of (Scoped) Design
	1) Drivers/Libraries - common support along with basic bootloading + RTOS
	2) Compiler          - subset c-compiler with preprocessing + assembly
	3) Microprocessor    - 16-bit softcore processor with peripherals
	4) Circuit Board     - pcb with required and example auxillary circuits

================================================================================
General Tasks:

Roadmap of Tasks:
	- create common lexer/parser, using cprep as an example use case
	- continue with implementation of cprep
		(consider common vs cprep for origin- namely symbol table w/o symbols)
		(try keeping rough docs on cprep to polish at end)
	- create _shared scripts to build all/ make product folder
		(asmld may just be copied over for now)
	- implement quaid
		(again- consider common origin and keep rough docs)
		(note that testing will likely need to be done from _shared)
	- convert asmld to using common libs + project structure
	- begin implementation of core
		(this will be heavily iterative)
		(again common origin consideration- though last major piece anyway)
		(emphasis on docs- may be awhile before 'finished')

Repository Sanitation TODO
	- redo "processor" structure (dev vs prod project/tools- keep dev project)
	- cleanup "processor" gitignores/README
	- software manifest for development environment

Rough SW Manifest (for development environment)
	- git (v???)
	- python (v???)
	- cmake (v???)
	- eclipse (as 'ide indexer', v???)
	- (cpp version for building? compiler + version?)
	- (quartus/dev processor project tools/versions?)

================================================================================
"/compiler" Organization:

	Top Level Organization:
		/_shared  shared resources- common code + templates + scripts
		/asmld    project for assembly/linker program
		/ccomp    project for C/target core program
		/cprep    project for preprocessor program
		/quaid    project for interface program
		README.md readme explaining structure/usage

	Project Organization:
		/<name>Project  source project- named after executable
			.cproject   Eclipse data
			.project    Eclipse data
			<src files> source code
		build.sh        interface to build executable
		clean.sh        interface to clean project/executable
		CMakeLists.txt  CMake script to build executable
	
	SW/Tools Used:
		Git/Git Bash  interface for operations + script interpreter
		MinGW GCC/G++ C/C++ compiler to create RISCII executables
		CMake         build system to facilitate actual build
		Eclipse       IDE for development quality of life
	
================================================================================
