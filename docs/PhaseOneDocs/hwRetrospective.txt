Hardware Retrospective ("Debrief of Hardware Design")
by John Eslinger
================================================================================
Table of Contents:
	-> Reflection on Process
	-> Notes on Current/Final Product
	-> Future Project Considerations
================================================================================
Reflection on Process:
	Positive Effects/Outcomes:
		-> Documenting requirements/interfaces simplified design work.
		-> Writing tests first ensured requirements AND design were tested.
		-> Simplifying testing/design requirements kept development moving.
			(Sacrificing quality for simplicity paid off in time)
			(Preserving concepts over exact specs eased design constraints)
	
	Negative Effects/Outcomes:
		-> Design hit ModelSim's capacity- simulator performance took a hit.
		-> Oversights made in simplifying cache and high level design.
			(Caches, as a result, write full blocks at once instead of words)
			(Complexity of freezing/clearing stages was overlooked)
		-> Quick development/tunnel vision led to poor design work.
	
	CS/ECE 552 (Fall 2020, UW-Madison):
		-> 552's class project has been avenged!
			(Hardware implements a 5-stage pipelined processor with L1 caches)
			(Different requirements/specs, but same hardware in spirit)
		-> Simulation, tester, and tests are custom made (unlike in class).
		-> Design successfully implements concepts learned in class.
	
================================================================================
Notes on Current/Final Product:
	Hardware/Simulation Performance:
		-> ModelSim's performance "negatively affected" by design's size.
			(Simulation performance seems to drop over simulation's lifespan)
			(First ~1000 clk cycle seem to run fairly quickly)
		-> About 10 extra cycles per simulation due to reset/halt confirmation.
		-> Design's freezing/clearing scheme likely inefficent, adding cycles.
	
	Testing Fragility/Ineffectiveness:
		-> Test solution written around ISA checking, not hardware checking.
			(Exact hardware functionality testing limited by these choices)
			(Hardware tests exist, but are indirect in nature)
		-> Some tests may be incorrectly written, but still passing.
			(Multiple tests during debugging required correction)
			("False positives" don't imply bad hardware, but have limited use)
		-> Some hardware tests suggest inefficiencies- performance affected.
	
================================================================================
Future Project Considerations:
	Refactoring Current Design:
		-> Redefine memory/caching interface to be more realistic.
			(Reference CS/ECE 552 and microprocessor systems for context)
			(Ensure performance costs incentivize caching)
		-> Tailor cache designs to instruction/data behavior.
		-> Rework high level freezing/clearing.
			(Determine best behavior for any pipeline/caching scenario)
			(Simply and/or encapsulate larger computations)
	
	Hardware Feature Additions:
		-> It is critical added features do NOT impact the ISA.
		-> Memory Mapped Peripherals
			(Serial output could provide dynamic simulation data)
			(Timer/Counter could act as easy internal clock)
			(Implementing would require compiler to avoid certain addresses)
		-> JTAG port to allow realistic flashing (vs. copying file to ROM).
	
	Far Future Preparation:
		-> Consider requirements to implement an interrupt system.
		-> Research FPGA options, usage, and supporting tools.
			(Understand how to get FPGA requirements from hardware design)
			(Determine what features to implement before using an FPGA)
			(Learn to leverage FPGA tool suites to better design hardware)
		-> Decide how to use deprecated designs to make newer, stronger ones.

================================================================================